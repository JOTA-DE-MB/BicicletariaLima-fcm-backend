const admin = require('firebase-admin');

// Inicializa o Firebase Admin SDK APENAS UMA VEZ
// Ele tenta inicializar apenas se ainda não foi inicializado para evitar erros.
if (!admin.apps.length) {
    try {
        // A chave da conta de serviço é lida de uma variável de ambiente do Vercel.
        // Isso é CRÍTICO para a segurança e evita que a chave esteja no seu código.
        const serviceAccount = JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT_KEY);
        admin.initializeApp({
            credential: admin.credential.cert(serviceAccount)
        });
        console.log('Firebase Admin SDK inicializado com sucesso.');
    } catch (error) {
        console.error('Erro ao inicializar Firebase Admin SDK:', error.message);
        // Em um ambiente de produção, você pode querer registrar esse erro de forma mais robusta.
    }
}

// Esta é a função principal que o Vercel irá expor como um endpoint HTTP
module.exports = async (req, res) => {
    // Garante que a função só responda a requisições POST
    if (req.method !== 'POST') {
        return res.status(405).json({ error: 'Método Não Permitido. Use POST.' });
    }

    try {
        // Extrai os dados enviados pelo seu aplicativo Android no corpo da requisição
        const { conversationId, senderId, title, body, targetUserId, targetTopic } = req.body;

        // Validação básica dos dados recebidos
        if (!title || !body || (!targetUserId && !targetTopic)) {
            return res.status(400).json({ 
                error: 'Campos obrigatórios ausentes: title, body, e um (targetUserId ou targetTopic) são necessários.' 
            });
        }

        let target; // Variável para definir o destino da notificação (tópico ou token)
        if (targetUserId) {
            // Se um ID de usuário alvo foi fornecido, usaremos um tópico específico do usuário.
            // Isso assume que seus usuários Android se inscrevem em um tópico como "support_SEU_USER_ID".
            target = support_${targetUserId}; 
        } else if (targetTopic) {
            // Se um tópico genérico (ex: "admin_notifications") foi fornecido.
            target = targetTopic;
        } else {
            return res.status(400).json({ 
                error: 'Um destino válido para a notificação (targetUserId ou targetTopic) é necessário.' 
            });
        }

        // Constrói o payload (carga útil) da notificação FCM
        const payload = {
            notification: {
                title: title,
                body: body,
                sound: "default" // Pode ser personalizado se desejar um som específico no app
            },
            data: { // Dados adicionais que você pode querer enviar para o app
                conversationId: conversationId || 'n/a',
                senderId: senderId || 'n/a'
                // Você pode adicionar mais dados aqui, como 'tipoNotificacao': 'suporte', etc.
            }
        };

        // Envia a notificação usando o Firebase Admin SDK
        const response = await admin.messaging().sendToTopic(target, payload);
        
        console.log('Mensagem enviada com sucesso:', response); // Log no console do Vercel
        return res.status(200).json({ success: true, messageId: response.messageId }); // Responde ao seu app

    } catch (error) {
        console.error('Erro ao enviar mensagem:', error); // Log detalhado do erro no console do Vercel
        // Retorna uma resposta de erro para o seu aplicativo Android
        return res.status(500).json({ error: 'Falha ao enviar notificação.', details: error.message });
    }
};